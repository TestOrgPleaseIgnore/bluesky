name: Process newly added JSON

on:
  push:
    branches:
      - main

permissions:
  contents: write

concurrency:
  group: process-json-${{ github.ref }}
  cancel-in-progress: true

jobs:
  process-json:
    runs-on: ubuntu-latest

    steps:
      - name: Compute number of pushed commits
        id: nb-of-commits
        run: |
          echo "plusOne=$((${{ github.event.commits.added.length }} + 1))" >> "$GITHUB_OUTPUT"

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: ${{ steps.nb-of-commits.outputs.plusOne }}

      # Must be done before setup-node.
      - name: Enable Corepack
        run: corepack enable

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "yarn"
          cache-dependency-path: actions/yarn.lock

      - name: Install Dependencies
        run: yarn install --frozen-lockfile
        working-directory: ./actions

      - name: Find newly added JSON files
        id: find-json
        run: |
          # Get the list of added JSON files in the records/new/ directory
          ADDED_FILES=$(git diff HEAD~${{ steps.nb-of-commits.outputs.plusOne }} --diff-filter=A --name-only records/new | grep '/.*\.json$' || true)
          echo "NEW_JSON_FILES=$ADDED_FILES" >> "$GITHUB_ENV"

      - name: Process and move files
        if: env.NEW_JSON_FILES
        env:
          BLUESKY_IDENTIFIER_NODEJS_ORG: nodejs.org
          BLUESKY_APP_PASSWORD_NODEJS_ORG: ${{ secrets.BLUESKY_APP_PASSWORD_NODEJS_ORG }}
        run: |
          for file in $NEW_JSON_FILES; do
            echo "Processing $file..."
            node actions/process.js "$file"
          done
      - name: Generate commit message
        run: |
          COMMIT_MESSAGE="Process new JSON files"
          if [ "${{ steps.nb-of-commits.outputs.plusOne }}" = "2" ] && git log --format=%s -1 | grep -q ' (#[[:digit]]+)$'; then
            LAST_COMMIT_MESSAGE="$(git log --format=%s -1)"
            PR_ID="(${LAST_COMMIT_MESSAGE#*\(\#}"
            COMMIT_MESSAGE="${COMMIT_MESSAGE} from #${PR_ID:1:-1}"
          fi
          echo "COMMIT_MESSAGE=$COMMIT_MESSAGE" >> "$GITHUB_ENV"

      - name: Commit and push changes
        if: env.NEW_JSON_FILES
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add records/
          git commit -m "$COMMIT_MESSAGE"
          git push
